{"version":3,"sources":["components/Navigation.js","components/Footer.js","components/Credit_Score.js","components/Age_Table.js","components/Credit_Age.js","components/Utilization_Table.js","components/Credit_Card_Use.js","components/Derogatory_Marks.js","components/Hard_Inquiries.js","components/Payment_History.js","components/Accounts_Table.js","components/Total_Accounts.js","components/Credit_Factors.js","components/Welcome.js","components/Dashboard.js","components/Help_Center.js","components/My_Account.js","components/Four_o_Four.js","App.js","index.js","registerServiceWorker.js"],"names":["Navigation","react_default","a","createElement","className","NavLink","to","Component","Footer","href","CreditScore","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user_score","user_state","state_score","userScore","bind","assertThisInitialized","user","setState","user_credit_score","state_average_score","AgeTable","CreditAge","creditor_ca","account_type_ca","num_of_years_ca","num_of_months_ca","years_months_ca","joinYearsMonths","headerCreditAge","tableCreditAge","ageAverage","headerAgeTable","message","current_year","Date","getFullYear","year_per_account","month_per_account","account_type","creditor","years","month_opened","months","i","length","current_status","push","opened","split","Number","years_months","y","row","z","key","map","result","sum_years","sum_months","denominator","n","toFixed","color","Age_Table","id","UtilizationTable","CreditCardUse","utilizationRatio","openCreditCards","headerUse","renderGraphic","renderMessage","use","limit","counter","credit_use","credit_limit","creditcard","ratio","available","data","label","value","Utilization_Table","react_chartjs","options","animateRotate","width","height","ratiocolor","table","DerogatoryMarks","renderCollectionAccounts","renderTableHeader","counter_collection","collection","public_record","collection_amount","paid","amount_paid_to_collection","animateScale","collections","collection_agency","HardInquiries","tableCreditor","tablePosted","tableAccountType","renderTable","inq_creditor","c","posted","p","inq_account_type","account","PaymentHistory","accounts_ph","nodata","paid_unpaid_nodata","percentage","tableCreditLimit","tableCreditUse","tableOfPayments","index","accounts","payment_history","single_account","l","u","m","AccountsTable","TotalAccounts","open_accounts","closed_accounts","counter_open","counter_closed","totalAccounts","openAccounts","closedAccounts","renderOpenAccounts","renderClosedAccounts","open","o","closed","Accounts_Table","CreditFactors","showData","event","target","renderComponent","Credit_Age","Credit_Card_Use","Derogatory_Marks","Hard_Inquiries","Payment_History","Total_Accounts","console","log","type","onClick","Welcome","userInformation","login","getAHint","preventDefault","getUserData","refs","alert","placeholder","ref","first_name","last_name","signOff","Dashboard","component","components_Welcome","Credit_Score","Credit_Factors","HelpCenter","alt","src","MyAccount","profile","middle_name","date_of_birth","place_of_birth","marital_status","annual_household_income","street_address","apartment","city","zip_code","telephone_number","email","FourOFour","App","gender","getHardInquiries","ReactGA","initialize","pageview","_this2","axios","get","concat","then","res","payments","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","catch","error","_this3","_this4","BrowserRouter","Route","startsWith","path","components_Navigation","Switch","exact","components_Dashboard","Help_Center","My_Account","Four_o_Four","components_Footer","ReactDOM","render","src_App_0","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.a035a708.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n      <div className=\"navigation flex\">\n        <h1 className=\"flex\">Credit Report</h1>\n          <nav>\n          \t<ul className=\"list-of-links\">\n          \t  <li className=\"nav-link\"><NavLink to=\"/credit-report/\">Dashboard</NavLink></li>\n          \t  <li className=\"nav-link\"><NavLink to=\"/credit-report/help-center\">Help Center</NavLink></li>\n          \t  <li className=\"nav-link\"><NavLink to=\"/credit-report/my-account\">My Account</NavLink></li>\n            </ul>\n          </nav>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer flex-1 center\">\n        <h6>Handmade by <a href=\"https://github.com/francheska-guzman\">Francheska Guzman</a></h6>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\n// console.log(\"Credit Score is working.\");\n\nclass CreditScore extends Component {\n  constructor(props){\n  \tsuper(props);\n    this.state = {\n      user_score: null,\n      user_state: null,\n      state_score: null\n    }\n    this.userScore = this.userScore.bind(this);\n  }\n\n  componentWillMount() {\n    // Grabbing the user credit score, the state when she live and the average\n    // in that state with the intention to render, if person is logged in.\n    if(this.props.state.user === true) {\n      this.setState({\n        user_score: this.props.state.user_credit_score,\n        user_state: this.props.state.state,\n        state_score: this.props.state.state_average_score\n      })\n    }\n  }\n\n  userScore() {\n    // If there's data in user_score, render the name of the state\n    // where user lives, and the average score on that state.\n    if(this.state.user_score !== null) {\n      return (\n        <div>\n          <h2 className=\"font80\">{this.state.user_score}</h2>\n          <h2 className=\"font20\">The average credit score in {this.state.user_state} is {this.state.state_score}.</h2>\n        </div>\n    )}\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"center\">Credit Score</h2>\n        {this.userScore()}\n      </div>\n    );\n  }\n}\n\nexport default CreditScore;","import React, { Component } from 'react';\n\nclass AgeTable extends Component {\n  render() {\n  return (\n    <div className=\"center\">\n      <table className=\"centralize\">\n\t  <tbody>\n\t    <tr>\n\t\t  <th className=\"r-background\"> </th>\n\t\t  <th className=\"r-background\"> </th>\n\t\t  <th className=\"y-background\"> </th>\n\t\t  <th className=\"g-background\"> </th>\n\t\t  <th className=\"g-background\"> </th>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>0-2 yrs</td>\n\t\t  <td>2-4 yrs</td>\n\t\t  <td>5-6 yrs</td>\n\t\t  <td>7-8 yrs</td>\n\t\t  <td>9+ yrs</td>\n\t\t</tr>\n\t  </tbody>\n\t  </table>\n\t</div>\n\t);\n  }\n}\n\nexport default AgeTable;","import React, { Component } from 'react';\nimport AgeTable from './Age_Table';\n\n// console.log(\"Credit Age is working.\");\n\nclass CreditAge extends Component {\nconstructor(props){\n  super(props);\n  // console.log(props);\n  this.state = {\n    creditor_ca: [],\n    account_type_ca: [],\n    num_of_years_ca: [],\n    num_of_months_ca: [],\n    years_months_ca: []\n  }\n  this.joinYearsMonths = this.joinYearsMonths.bind(this);\n  this.headerCreditAge = this.headerCreditAge.bind(this);\n  this.tableCreditAge = this.tableCreditAge.bind(this);\n  this.ageAverage = this.ageAverage.bind(this);\n  this.headerAgeTable = this.headerAgeTable.bind(this);\n  this.message = this.message.bind(this);\n  }\n\n  componentWillMount() {\n    // Get today's date.\n    var today = new Date();\n    // Get only the year.\n    var current_year = today.getFullYear();\n    // Local variables.\n    var year_per_account = [];\n    var month_per_account = [];\n    var account_type = [];\n    var creditor = [];\n    var year_opened = 0;\n    var years = 0;\n    var month_opened = 0;\n    var months = 0;\n\n      // Check which accounts are Open and save creditor, account type, number of years and months.\n      for(var i = 0; i < this.props.state.creditor.length; i += 1) {\n        // console.log(this.props.state.current_status[i])\n        if(this.props.state.current_status[i] === \"Open\") {\n          // About the account\n          creditor.push(this.props.state.creditor[i]);\n          account_type.push(this.props.state.account_type[i]);\n          // Years\n          year_opened = this.props.state.opened[i].split(\"-\")[2];\n          years = (current_year - year_opened);\n          year_per_account.push(years);\n          // Months\n          month_opened = this.props.state.opened[i].split(\"-\")[0]; \n          months = (12 - Number(month_opened));\n          month_per_account.push(months);\n        }\n      }\n\n      // Setting the state by reference the local variables.\n      this.setState({ \n        creditor_ca: creditor,\n        account_type_ca: account_type,\n        num_of_years_ca: year_per_account,\n        num_of_months_ca: month_per_account\n      }, function() {\n        this.joinYearsMonths();\n     });\n  }\n\n  \n  joinYearsMonths() {\n    // Local variable.\n    var years_months = [];\n\n      for(var y = 0; y < this.state.creditor_ca.length; y += 1) {\n        years_months.push(this.state.num_of_years_ca[y] + \" yrs, \" + this.state.num_of_months_ca[y] + \" mos\")\n      }\n\n      // Setting the state by reference the local variable.\n      this.setState({\n        years_months_ca: years_months\n      });\n  }\n\n  tableCreditAge() {\n    // Local variables.\n    var row = [];\n\n      // Looping to push into an array each row with the purpose of render.\n      for(var z = 0; z < this.state.creditor_ca.length; z += 1) {\n        row.push([\n          <td key={\"Creditor_\"+z+1}>{this.state.creditor_ca[z]}</td>,\n          <td key={\"AccountType_\"+z+1}>{this.state.account_type_ca[z]}</td>,\n          <td key={\"YearsMonths_\"+z+1}>{this.state.years_months_ca[z]}</td>\n        ]);\n      }\n\n      // Render\n      return (row.map(function(row, i){\n        return <tr key={i+1}>{row}</tr>\n      }));\n  }\n\n  ageAverage() {\n    // Local variable.\n    var sum_years = 0;\n    var sum_months = 0;\n    var numerator = 0;\n    var denominator = 0;\n    var result = 0;\n\n      // Sum all years.\n      // Sum all months.\n      // Denominator is a counter that will be used to calculate the average.\n      for(var n = 0; n < this.state.creditor_ca.length; n += 1){\n        sum_years += this.state.num_of_years_ca[n];\n        sum_months += this.state.num_of_months_ca[n];\n        denominator += 1;\n      }\n\n      numerator = sum_years + (sum_months/12);\n      result = (numerator/denominator).toFixed(2);\n\n    // Reusing the method 'message' to this if/else statement.\n    if(this.state.creditor_ca[0] !== [] && result < 5) {\n      return (this.message('red', result))\n    }\n    else if(this.state.creditor_ca[0] !== [] && result <= 7) {\n      return (this.message('yellow', result))\n    }\n    else if(this.state.creditor_ca[0] !== [] && result > 7) {\n      return (this.message('green', result))\n    }\n    else {\n      return (<h2 className=\"center\">Unable to calculate the average, because you have 0 opened accounts.</h2>)\n    }\n  };\n\n  // The message receives the color and the variable result.\n  message(color, result) {\n    return (\n      <h2 className=\"center\">Average age of open accounts: \n      <span className={color}><span className=\"font70\"> {result}</span> yrs</span>\n      </h2>\n    )\n  };\n\n  // If data, render table header.\n  headerCreditAge() {\n    if(this.state.creditor_ca[0] !== []) {\n      return (\n        <tr>\n          <th className=\"t-title factor-info\">Creditor</th>\n          <th className=\"t-title factor-info\">Type of Account</th>\n          <th className=\"t-title factor-info\">Age of Account</th>\n        </tr>\n      );\n    }\n  }\n\n  // If data, render another componet (which is the index of Credit Age).\n  headerAgeTable() {\n    if(this.state.creditor_ca[0] !== []) {\n      return (<AgeTable />)\n    };\n  }\n\n  render() {\n    return (\n      <div id=\"credit-age\" className=\"flex-1\">\n        <h4 className=\"center blue\">Credit Age</h4>\n          {this.ageAverage()}\n          {this.headerAgeTable()}\n        <table className=\"dark\">\n          <tbody>\n          {this.headerCreditAge()}\n          {this.tableCreditAge()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default CreditAge;","import React, { Component } from 'react';\n\n// This table is related to Credit Card Use component.\n\nclass UtilizationTable extends Component {\n  render() {\n  return (\n    <div className=\"center factor-info\">\n      <table className=\"flex-1 dark\">\n\t  <tbody>\n\t\t<tr>\n\t\t  <td className=\"t-title\">Utilization Ratio</td>\n\t\t  <td className=\"t-title\">Result</td>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>0-9%</td>\n\t\t  <td className=\"green\">Excellent</td>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>10-29%</td>\n\t\t  <td className=\"green\">Good</td>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>30-49%</td>\n\t\t  <td className=\"yellow\">Fair</td>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>50-74%</td>\n\t\t  <td className=\"red\">Poor</td>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>75-100%</td>\n\t\t  <td className=\"red\">Very Poor</td>\n\t\t</tr>\n\t  </tbody>\n\t  </table>\n\t</div>\n\t);\n  }\n}\n\nexport default UtilizationTable;","import React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs';\nimport UtilizationTable from './Utilization_Table';\n\n// console.log(\"Credit Card Use is working.\");\n\nclass CreditCardUse extends Component {\nconstructor(props){\n  super(props);\n  this.utilizationRatio = this.utilizationRatio.bind(this);\n  this.openCreditCards = this.openCreditCards.bind(this);\n  this.headerUse = this.headerUse.bind(this);\n  this.renderGraphic = this.renderGraphic.bind(this);\n  this.renderMessage = this.renderMessage.bind(this);\n  }\n\n  utilizationRatio() {\n    var use = 0;\n    var limit = 0;\n    var counter = 0;\n\n    for(var i = 0; i < this.props.state.account_type.length; i += 1) {\n    // If the account type is a credit card, and is currently open:\n      if (this.props.state.account_type[i] === \"Credit Card\" && this.props.state.current_status[i] === \"Open\") {\n          use += this.props.state.credit_use[i];\n          limit += this.props.state.credit_limit[i];\n          counter += 1;\n    }};\n\n    // If user have 0 or 1 credit card render singular, otherwise render in plural:\n    var creditcard = ((counter <= 1) ? \"credit card\" : \"credit cards\");\n    // To avoid fractions:\n    var ratio = (use/limit).toFixed(2) * 100;\n    // Calculate the available credit:\n    var available = limit - use;\n\n    // Data for the Doughnut chart:\n    var data = [\n      {color: \"#C1091f\", label: \"Credit Use\", value: use},\n      {color: \"#0E9E17\", label: \"Available Credit\", value: available}\n    ];\n\n    // Using an if/else statement to display a color for a certain ratio range.\n  \tif(ratio <= 29) {\n  \t  return (\n        <div className=\"flex\">\n        {this.renderGraphic(data)}\n        {this.renderMessage('font70 green', ratio, counter, creditcard, limit, use, available)}\n        <UtilizationTable />\n        </div>\n      )\n    }\n  \telse if(ratio <= 49) {\n      return (\n        <div className=\"flex\">\n        {this.renderGraphic(data)}\n        {this.renderMessage('font70 yellow', ratio, counter, creditcard, limit, use, available)}\n        <UtilizationTable />\n        </div>\n      )\n    }\n  \telse if(ratio <= 100) {\n      return (\n        <div className=\"flex\">\n        {this.renderGraphic(data)}\n        {this.renderMessage('font70 red', ratio, counter, creditcard, limit, use, available)}\n        <UtilizationTable />\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"flex\">You have 0 open credit card.</div>\n      )\n    }\n  }\n\n  // I reuse method for else/if statement.\n  renderGraphic(data) {\n    return (\n      <div className=\"flex-1 center\">\n        <Doughnut data={data} options={{animateRotate: true}} width=\"250\" height=\"250\"/>\n      </div>\n    )\n  }\n\n  // I reuse method for else/if statement.\n  renderMessage(ratiocolor, ratio, counter, creditcard, limit, use, available) {\n    return (\n      <div className=\"flex-1\">\n        <ul className=\"factor-info\">\n          <li className={ratiocolor}>{ratio}%</li>\n          <li>You have {counter} open {creditcard}.</li>\n          <li>Your total credit limit is: {limit}</li>\n          <li>Your total credit use is: {use}</li>\n          <li>Your total available credit is: {available}</li>\n        </ul>\n      </div>\n    )\n  }\n\n  openCreditCards() {\n    var table = [];\n    // If the account is \"Credit Card\" and is \"Open\", push into an array with the intention\n    // to render that information.\n    for(var i = 0; i < this.props.state.opened.length; i += 1) {\n      if (this.props.state.account_type[i] === \"Credit Card\" && this.props.state.current_status[i] === \"Open\") { \n          table.push([\n            <td key={\"Opened_\"+i+1}>{this.props.state.opened[i]}</td>,\n            <td key={\"Creditor_\"+i+1}>{this.props.state.creditor[i]}</td>,\n            <td key={\"CreditLimit_\"+i+1}>{this.props.state.credit_limit[i]}</td>,\n            <td key={\"CreditUse_\"+i+1}>{this.props.state.credit_use[i]}</td>,\n            <td key={\"CurrentStatus_\"+i+1}>{this.props.state.current_status[i]}</td>\n          ]);\n        }\n      }\n\n      return (table.map(function(table, n){\n        return (\n          <tr key={n+1}>{table}</tr>\n       )}\n    ))\n  }\n\n  headerUse() {\n    return (\n      <tr>\n        <th className=\"t-title factor-info\">Opened</th>\n        <th className=\"t-title factor-info\">Creditor</th>\n        <th className=\"t-title factor-info\">Credit Limit</th>\n        <th className=\"t-title factor-info\">Credit Use</th>\n        <th className=\"t-title factor-info\">Current Status</th>\n      </tr>\n  )};\n\n  render() {\n    return (\n      <div id=\"credit-card-use\" className=\"flex-1\">\n        <h4 className=\"center red\">Credit Card Use</h4>\n          <span className=\"factor-info\">The credit card utilization is the \n          percentage of your credit limits that you're using. It's calculated \n          by dividing your total credit balances by your total credit limits on open accounts.</span>\n          <br /><br />\n          <span className=\"graphic-description flex-5\">{this.utilizationRatio()}</span>\n          <table className=\"dark\">\n            <tbody>\n              {this.headerUse()}\n              {this.openCreditCards()}\n            </tbody>\n          </table>\n      </div>\n    );\n  }\n}\n\nexport default CreditCardUse;","import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs';\n\n// console.log(\"Derogatory Marks is working.\");\n\nclass DerogatoryMarks extends Component {\n  constructor(props){\n    super(props);\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderCollectionAccounts = this.renderCollectionAccounts.bind(this);\n    this.renderGraphic = this.renderGraphic.bind(this);\n    this.renderTableHeader = this.renderTableHeader.bind(this);\n  }\n\n  renderMessage() {\n    // Local variable to count what accounts are in collection.\n    let counter_collection = 0;\n\n    // Looping through all accounts.\n  \tfor(var i = 0; i < this.props.state.collection.length; i += 1) {\n  \t  if (this.props.state.collection[i] === \"In Collection\") {\n  \t  \tcounter_collection += 1;\n  \t}}\n\n    // If user have a derogatory mark, render the following message:\n    if(counter_collection > 0 || this.props.state.public_record === \"Have Public Record\") {\n      return (\n        <div className=\"center\">\n          <h2>We noticed a negative mark on your report.</h2>\n          <span className=\"factor-info\">Derogatory marks generally stay on your report \n          for 7-10 years, but their effects can start to fade over time.</span>\n        </div>\n    )}\n\n    // Otherwise, render the following message:\n    else {\n      return (\n        <div className=\"center\">\n          <h2>Excellent Record</h2>\n          <span className=\"factor-info\">You don't have any collection or public record.</span>\n        </div>\n    )}\n  }\n\n  renderGraphic() {\n    var collection_amount = 0;\n    var paid = 0;\n\n    // Looping to sum how much the user paid to collection agencies,\n    // and sum how much is the debt (which is equal to credit used).\n    for(var i = 0; i < this.props.state.amount_paid_to_collection.length; i += 1) {\n      if (this.props.state.amount_paid_to_collection[i] > 0) {\n\n        // Total of debt.\n        collection_amount += this.props.state.credit_use[i];\n        // How much the user paid to collection agencies.\n        paid += this.props.state.amount_paid_to_collection[i];\n\n    }}\n\n    // Amount pending to pay to collection agencies.\n    var pending = collection_amount - paid;\n\n    // Object for Pie graphic:\n    var data = [\n            {color: \"#3c076d\", label: \"Total amount pending to be paid\", value: pending},\n            {color: \"#0a72b2\", label: \"Total amount you already paid to collection\", value: paid}\n    ];\n\n    // If user have a collection amount, render graphic:\n    if (collection_amount !== 0) {\n      return (\n        <div className=\"center\">\n        <Pie data={data} options={{animateScale: true}} width=\"600\" height=\"250\"/>\n        </div>\n    )};\n  }\n\n  renderCollectionAccounts() {\n    let collections = [];\n   \n    // Looping to push information related to a same account into an array.\n    // Each data will be contained in a single table data (<td>).\n    for(var i = 0; i < this.props.state.collection.length; i += 1) {\n      if (this.props.state.collection[i] === \"In Collection\") {\n        collections.push([\n          <td>{this.props.state.opened[i]}</td>,\n          <td>{this.props.state.creditor[i]}</td>,\n          <td>{this.props.state.collection_agency[i]}</td>,\n          <td>{this.props.state.account_type[i]}</td>,\n          <td>{this.props.state.credit_use[i]}</td>,\n          <td>{this.props.state.amount_paid_to_collection[i]}</td>,\n          <td>{this.props.state.current_status[i]}</td>\n        ]);\n       }}\n\n    // Mapping through the array created above, to render the information\n    // in format of rows.\n    return (collections.map(function(collections, i){\n        return <tr key={i+1}>{collections}</tr> \n    })\n  )}\n\n  renderTableHeader() {\n  // If user have a collection OR public record, render table header:\n    for(var i = 0; i < this.props.state.collection.length; i += 1){\n\n      if(this.props.state.collection[i] === \"In Collection\" || this.props.state.public_record === \"Have Public Record\"){\n      return (\n        <tr>\n          <th className=\"t-title\">Opened</th>\n          <th className=\"t-title\">Creditor</th>\n          <th className=\"t-title\">Collection Agency</th>\n          <th className=\"t-title\">Account Type</th>\n          <th className=\"t-title\">Collection Amount</th>\n          <th className=\"t-title\">Amount Paid to Collection</th>\n          <th className=\"t-title\">Current Status</th>  \n        </tr> \n      )}\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"derogatory-marks\" className=\"flex-1\">\n        <h4 className=\"center green\">Derogatory Marks</h4>\n        {this.renderMessage()}<br />{this.renderGraphic()}\n        <table className=\"dark\">\n          <tbody>\n            {this.renderTableHeader()}\n            {this.renderCollectionAccounts()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default DerogatoryMarks;","import React, { Component } from 'react';\n\n// console.log(\"Hard Inquiries is working.\");\n\nclass HardInquiries extends Component {\n  constructor(props){\n  \tsuper(props);\n  \t// console.log(props);\n    this.tableCreditor = this.tableCreditor.bind(this);\n    this.tablePosted = this.tablePosted.bind(this);\n    this.tableAccountType = this.tableAccountType.bind(this);\n    this.renderMessage = this.renderMessage.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n  }\n\n  // Mapping through the creditors that made a hard inquirie to the user.\n  tableCreditor(){\n    return (this.props.state.inq_creditor.map(function(creditor, c){\n      return (<tr key={c}><td>{creditor}</td></tr>)\n    })\n  )}\n\n  // Mapping through the inquiry posted date (date when creditor request \n  // user's credit information to credit bureaus).\n  tablePosted(){\n    return (this.props.state.posted.map(function(posted, p){\n      return (<tr key={p}><td>{posted}</td></tr>)\n    })\n  )}\n\n  // Mapping through the account type that the user applied.\n  tableAccountType(){\n    return (this.props.state.inq_account_type.map(function(account, a){\n      return (<tr key={a}><td>{account}</td></tr>)\n    })\n  )}\n\n  renderMessage(){\n    // If user have hard inquiries (equal to a \"not empty array\"):\n    if(this.props.state.inq_creditor !== []) {\n      return (\n        <div className=\"center\">\n          <h2>We noticed a hard inquiry in your credit report.</h2>\n          <span className=\"factor-info\">Hard inquiries from things like credit \n          applications can stay on your report for up to 2 years, but their \n          effects tend to fade over time.</span>\n        </div>\n    )}\n    // Otherwise:\n    else {\n      return (\n        <div className=\"center\">\n          <h2>Great!</h2>\n          <span className=\"factor-info\">You don't have hard inquiries in your report.</span>\n        </div>\n    )}\n  }\n\n  renderTable() {\n    // If data, render table. I don't need an else because in the renderMessage method I have\n    // an else statement that render when user don't have hard inquiries.\n    if(this.props.state.inq_creditor !== []) {\n      return (\n        <tbody>\n          <tr>\n          <td className=\"t-title factor-info center\">Creditor</td>\n          <td className=\"t-title factor-info center\">Posted</td>\n          <td className=\"t-title factor-info center\">Account Type</td>\n          </tr>\n          <td>{this.tableCreditor()}</td>\n          <td>{this.tablePosted()}</td>\n          <td>{this.tableAccountType()}</td>\n        </tbody>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"hard-inquiries\" className=\"flex-1\">\n        <h4 className=\"center yellow\">Hard Inquiries</h4>\n        {this.renderMessage()}\n        <table className=\"dark\">\n        {this.renderTable()}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default HardInquiries;","import React, { Component } from 'react';\n\n// console.log(\"Payment History is working.\");\n\nclass PaymentHistory extends Component {\n  constructor(props){\n  super(props);\n  this.state = {\n  \taccounts_ph: [],\n    paid: 0,\n    nodata: 0,\n    paid_unpaid_nodata: 0\n  }\n  this.percentage = this.percentage.bind(this);\n  this.tableCreditor = this.tableCreditor.bind(this);\n  this.tableCreditLimit = this.tableCreditLimit.bind(this);\n  this.tableCreditUse = this.tableCreditUse.bind(this);\n  this.tableOfPayments = this.tableOfPayments.bind(this);\n  this.index = this.index.bind(this);\n  }\n\n  // Looping though payments to add color.\n  componentWillMount() {\n  // Local variable.\n  let accounts = [];\n  let paid = 0;\n  let nodata = 0;\n  let paid_unpaid_nodata = 0;\n\n  \t// Looping through each account.\n\tfor (var i = 0; i < this.props.state.payment_history.length; i += 1) {\n    // Everytime the second for loop ends, single_account starts in an empty array,\n    // to be used in the nex account.\n\tlet single_account = [];\n\t  // Looping through each month of each account.\n\t  for(var n = 0; n < this.props.state.payment_history[i].length; n += 1) {\n\t  //console.log(\"Account: \" + i + \", Payments for the Month: \" + n + \": \" +this.props.state.payment_history[i][n]);\n\t  \t// If user paid at least the minimum payment due (true), render green color.\n\t  \tif(this.props.state.payment_history[i][n] === true) {\n\t  \tsingle_account.push(<td key={n+1} className=\"green-background\"></td>);\n      paid += 1;\n\t  \t}\n\t  \t// If user don't paid the bill in a particular month, render red color.\n\t  \telse if(this.props.state.payment_history[i][n] === false) {\n\t  \tsingle_account.push(<td key={n+1} className=\"red-background\">✕</td>);\n\t\t  }\n      // If no data, render grey.\n      else {\n      single_account.push(<td key={n+1} className=\"grey-background\"></td>);\n      nodata += 1;\n      }\n      paid_unpaid_nodata += 1;\n\t  }\n\t  // When the 12 months finish, then push to this other array.\n\t  accounts.push(single_account)\n    }\n    this.setState({\n      accounts_ph: accounts,\n      paid: paid,\n      nodata: nodata,\n      paid_unpaid_nodata: paid_unpaid_nodata\n    }, function() {\n        this.tableOfPayments();\n    });\n  }\n\n  // Render creditor information.\n  tableCreditor(){\n    return (this.props.state.creditor.map(function(creditor, c){\n      return <tr key={c+1}>{creditor}</tr>\n    }))\n  }\n\n  // Render credit limit information.\n  tableCreditLimit(){\n    return (this.props.state.credit_limit.map(function(limit, l){\n      return <tr key={l+1}>{limit}</tr>\n    }))\n  }\n\n  // Render credit use information.\n  tableCreditUse(){\n    return (this.props.state.credit_use.map(function(use, u){\n      return <tr key={u+1}>{use}</tr>\n    }))\n  }\n\n  // Render the table of payments.\n  tableOfPayments(){\n    return (this.state.accounts_ph.map(function(months, m){\n      return <tr key={m+1}>{months}</tr>\n    }))\n  }\n\n  percentage() {\n    // Sum paid and no data, divided by the sum of paid, unpaid and no data.\n    // No data can't hurt the percentage of the user.\n    var result = ((this.state.paid + this.state.nodata)/this.state.paid_unpaid_nodata).toFixed(2) * 100;\n\n    return (\n      <h2 className=\"flex-1\">You paid the <span className=\"font70\">{result}%</span> of your total payments.</h2>\n    )\n  }\n\n  index() {\n    return (\n      <div>\n        <span className=\"green-background-i\">   </span><span className=\"factor-description\">You paid at least the minimum payment.</span><br/><br/>\n        <span className=\"red-background-i\">   </span><span className=\"factor-description\">You missed a payment.</span><br/><br/>\n        <span className=\"grey-background-i\">   </span><span className=\"factor-description\">We have no data related to this account. A reason could be that you recently open that account. No data doesn't have a negative impact.</span><br/><br/>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div id=\"payment-history\" className=\"flex-1\">\n      <div className=\"center\">\n        <h4 className=\"purple\">Payment History</h4>\n        {this.percentage()}\n        <h3 className=\"factor-info\">Even one late payment could hurt your credit health, so stay mindful of your due dates. \n        A 100% on-time payment history is a good sign for lenders that you can reliably make payments.</h3>\n      </div>\n        <table className=\"dark font18\">\n       \t<tbody>\n  \t      <tr>\n  \t      \t<th className=\"month t-title factor-info\">Creditor</th>\n  \t      \t<th className=\"month t-title factor-info\">Credit Limit</th>\n  \t      \t<th className=\"month t-title factor-info\">Credit Use</th>\n            <th className=\"month t-title left\">J | F | M | A | M | J | J | A | S | O | N | D</th>\n  \t      </tr>\n          <tr>\n            <td>{this.tableCreditor()}</td>\n            <td>{this.tableCreditLimit()}</td>\n            <td>{this.tableCreditUse()}</td>\n            <td className=\"center\">{this.tableOfPayments()}</td>\n          </tr>\n  \t    </tbody>\n        </table>\n        {this.index()}\n      </div>\n    );\n  }\n}\n\nexport default PaymentHistory;","import React, { Component } from 'react';\n\nclass AccountsTable extends Component {\n  render() {\n  return (\n    <div className=\"center\">\n      <table className=\"centralize\">\n\t  <tbody>\n\t    <tr>\n\t\t  <th className=\"r-background\"> </th>\n\t\t  <th className=\"r-background\"> </th>\n\t\t  <th className=\"g-background\"> </th>\n\t\t  <th className=\"g-background\"> </th>\n\t\t</tr>\n\t\t<tr>\n\t\t  <td>0-5</td>\n\t\t  <td>6-10</td>\n\t\t  <td>11-20</td>\n\t\t  <td>21+</td>\n\t\t</tr>\n\t  </tbody>\n\t  </table>\n\t</div>\n\t);\n  }\n}\n\nexport default AccountsTable;","import React, { Component } from 'react';\nimport AccountsTable from './Accounts_Table';\n\n// console.log(\"Total Accounts is working.\");\n\nclass TotalAccounts extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      open_accounts: [],\n      closed_accounts: [],\n      counter: 0,\n      counter_open: 0,\n      counter_closed: 0\n    }\n    this.totalAccounts = this.totalAccounts.bind(this);\n    this.openAccounts = this.openAccounts.bind(this);\n    this.closedAccounts = this.closedAccounts.bind(this);\n    this.renderOpenAccounts = this.renderOpenAccounts.bind(this);\n    this.renderClosedAccounts = this.renderClosedAccounts.bind(this);\n}\n\n  componentWillMount() {\n    // Local variables.\n  \tvar open_accounts = [];\n  \tvar closed_accounts = [];\n    var counter_open = 0;\n    var counter_closed = 0;\n    var counter = 0;\n\n    // Looping through all accounts and separate which accounts are open\n    // and which accounts are closed.\n  \tfor(var i = 0; i < this.props.state.creditor.length; i += 1) {\n  \t  if(this.props.state.current_status[i] === \"Open\") {\n        // Inserting information from a single open account to open_accounts array.\n  \t  \topen_accounts.push([\n  \t  \t<td key={i+1}>{this.props.state.creditor[i]}</td>, \n        <td key={i+2}>{this.props.state.account_type[i]}</td>,\n  \t  \t<td key={i+3}>{this.props.state.credit_limit[i]}</td>, \n        <td key={i+4}>{this.props.state.credit_use[i]}</td>,\n  \t  \t<td key={i+5}>{this.props.state.opened[i]}</td>]);\n        counter_open += 1;\n  \t  }\n  \t  else if(this.props.state.current_status[i] === \"Closed\") {\n        // Inserting information from a single closed account to closed_accounts array.\n\t\t    closed_accounts.push([\n  \t  \t<td key={i+1}>{this.props.state.creditor[i]}</td>, \n        <td key={i+2}>{this.props.state.account_type[i]}</td>,\n  \t  \t<td key={i+3}>{this.props.state.credit_limit[i]}</td>, \n        <td key={i+4}>{this.props.state.credit_use[i]}</td>,\n  \t  \t<td key={i+5}>{this.props.state.opened[i]}</td>]);\n        counter_closed += 1;\n  \t  }\n      counter += 1;\n  \t}\n\n    // Saving the information to be used in other methods.\n  \tthis.setState({\n  \t  open_accounts: open_accounts,\n  \t  closed_accounts: closed_accounts,\n      counter: counter,\n      counter_open: counter_open,\n      counter_closed: counter_closed\n  \t}, function() {\n      this.openAccounts();\n      this.closedAccounts();\n    });\n  }\n\n  totalAccounts() {\n    // If user don't have too many accounts (in this case less or\n    // equal 10), will render in red.\n    if(this.state.counter <= 10) {\n      return (<span className=\"red\">{this.state.counter}</span>);\n    }\n    // Otherwise, number of total accounts will render in green.\n    else {\n      return (<span className=\"green\">{this.state.counter}</span>);\n    }\n  }\n\n  // Looping through open accounts array to render in the open accounts table.\n  openAccounts() {\n    return (this.state.open_accounts.map(function(open, o){\n        return (<tr key={o+1}>{open}</tr>) \n    }));\n  }\n\n  // Looping through closed accounts array to render in the closed accounts table.\n  closedAccounts() {\n    return (this.state.closed_accounts.map(function(closed, c){\n        return (<tr key={c+1}>{closed}</tr>) \n    }));\n  }\n\n  // Render rows for each open account.\n  renderOpenAccounts() {\n    // If user have open accounts, render table header:\n  \tif(this.state.counter_open > 0) {\n  \t  return (\n  \t  \t<div className=\"flex-1\">\n  \t  \t<h2>Your open accounts: {this.state.counter_open}</h2>\n\t  \t  <table className=\"dark\">\n\t\t  <tbody>\n\t\t    <tr>\n\t\t\t  <th className=\"t-title factor-info\">Creditor</th>\n\t\t\t  <th className=\"t-title factor-info\">Account Type</th>\n\t\t\t  <th className=\"t-title factor-info\">Credit Limit</th>\n\t\t\t  <th className=\"t-title factor-info\">Credit Use</th>\n\t\t\t  <th className=\"t-title factor-info\">Opened</th>\n\t\t\t</tr>\n\t\t\t{this.openAccounts()}\n\t\t  </tbody>\n\t\t  </table>\n\t\t</div>\n  \t  )\n  \t}\n    // Otherwise:\n    else {\n  \t  return (<div className=\"flex-1\"><h2>You have {this.state.counter_open} open accounts.</h2></div>)\n  \t}\n  }\n\n  // Render rows for each closed account.\n  renderClosedAccounts() {\n    // If user have closed accounts, render table header:\n  \tif(this.state.counter_closed > 0) {\n  \t  return (\n  \t  \t<div className=\"flex-1\">\n  \t  \t<h2>Your closed accounts: {this.state.counter_closed}</h2>\n\t  \t  <table className=\"dark\">\n\t\t  <tbody>\n\t\t    <tr>\n\t\t\t  <th className=\"t-title factor-info\">Creditor</th>\n\t\t\t  <th className=\"t-title factor-info\">Account Type</th>\n\t\t\t  <th className=\"t-title factor-info\">Credit Limit</th>\n\t\t\t  <th className=\"t-title factor-info\">Credit Use</th>\n\t\t\t  <th className=\"t-title factor-info\">Opened</th>\n\t\t\t</tr>\n\t\t\t{this.closedAccounts()}\n\t\t  </tbody>\n\t\t  </table>\n\t\t</div>\n  \t  )\n  \t}\n    // Otherwise:\n  \telse {\n  \t  return (<div className=\"flex-1\"><h2>You have {this.state.counter_closed} closed accounts.</h2></div>)\n  \t}\n  }\n\n  render() {\n    return (\n      <div id=\"total-accounts\" className=\"flex-1\">\n        <h4 className=\"center orange\">Total Accounts</h4>\n        <h2 className=\"center\">You have a total of <span className=\"font70\">{this.totalAccounts()}</span> accounts.</h2>\n        <h3 className=\"center\">Lenders typically like to see that you've used a variety of accounts responsibly.</h3>\n        <AccountsTable />\n        {this.renderOpenAccounts()}\n        {this.renderClosedAccounts()}\n      </div>\n    );\n  }\n}\n\nexport default TotalAccounts;","import React, { Component } from 'react';\nimport CreditAge from './Credit_Age';\nimport CreditCardUse from './Credit_Card_Use';\nimport DerogatoryMarks from './Derogatory_Marks';\nimport HardInquiries from './Hard_Inquiries';\nimport PaymentHistory from './Payment_History';\nimport TotalAccounts from './Total_Accounts';\n\n// console.log(\"Credit Factors is working.\");\n\nclass CreditFactors extends Component {\n  constructor(props){\n    super(props);\n    this.showData = this.showData.bind(this);\n  }\n\n  // Check which credit factor has clicked by the user.\n  // The method renderComponent is defined in the Dashboard component.\n  showData(event) {\n    if(event.target.id === \"creditfactor1\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Credit Age\");\n      this.props.renderComponent(\n      <CreditAge state={this.props.state} />);\n    }\n    else if(event.target.id === \"creditfactor2\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Credit Card Use\");\n      this.props.renderComponent(\n      <CreditCardUse state={this.props.state} />);\n    }\n    else if(event.target.id === \"creditfactor3\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Derogatory Marks\");  \n      this.props.renderComponent(\n      <DerogatoryMarks state={this.props.state} />);  \n    }\n    else if(event.target.id === \"creditfactor4\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Hard Inquiries\"); \n      this.props.renderComponent(\n      <HardInquiries state={this.props.state} />);\n    }\n    else if(event.target.id === \"creditfactor5\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Payment History\"); \n      this.props.renderComponent(\n      <PaymentHistory state={this.props.state} />);\n    }\n    else if(event.target.id === \"creditfactor6\" && this.props.state.user === true) {\n      // console.log(\"Show Data: Total Accounts\"); \n      this.props.renderComponent(\n      <TotalAccounts state={this.props.state} />);\n    }\n    else {\n      console.log(\"You need to sign in first by the using user id '1' or user id '2'.\")\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <h2 className=\"center\">Credit Factors</h2>\n         <div className=\"flex\">\n         <div className=\"box flex-1\">\n            <h3 className=\"center blue\">Credit Age</h3>\n            <span className=\"factor-description\">Average age of your open accounts.</span><br />\n            <input type=\"button\" id=\"creditfactor1\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n  \t     <div className=\"box flex-1\">\n            <h3 className=\"center red\">Credit Card Use</h3>\n            <span className=\"factor-description\">How much credit you're using compared to your total limits.</span><br />\n            <input type=\"button\" id=\"creditfactor2\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n         <div className=\"box flex-1\">\n            <h3 className=\"center green\">Derogatory Marks</h3>\n            <span className=\"factor-description\">Collections, tax liens, bankruptcies or civil judgments on your report.</span><br />\n            <input type=\"button\" id=\"creditfactor3\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n         </div>\n\n         <div className=\"flex\">\n  \t     <div className=\"box flex-1\">\n            <h3 className=\"center yellow\">Hard Inquiries</h3>\n            <span className=\"factor-description\">Number of times you've applied for credit.</span><br />\n            <input type=\"button\" id=\"creditfactor4\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n         <div className=\"box flex-1\">\n            <h3 className=\"center purple\">Payment History</h3>\n            <span className=\"factor-description\">Percentage of payments you've made on time.</span><br />\n            <input type=\"button\" id=\"creditfactor5\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n    \t   <div className=\"box flex-1\">\n            <h3 className=\"center orange\">Total Accounts</h3>\n            <span className=\"factor-description\">Total open and closed accounts.</span><br />\n            <input type=\"button\" id=\"creditfactor6\" className=\"text-appearance\" \n            value=\"View Details\" onClick={this.showData} />\n         </div>\n\t       </div>\n\t    </div>\n    );\n  }\n}\n\nexport default CreditFactors;","import React, { Component } from 'react';\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props);\n    this.userInformation = this.userInformation.bind(this);\n    this.login = this.login.bind(this);\n    this.getAHint = this.getAHint.bind(this);\n  }\n\n  // When user write '1' or '2', the value received go to a method in a parent component.\n  // Also, deletes any input entered.\n  userInformation(event) {\n    event.preventDefault(); \n      this.props.getUserData(this.refs.id.value);\n      this.refs.id.value = null;\n  }\n\n  // When user click over the question mark:\n  getAHint(event) {\n    alert(\"Type the number '1' or '2' in the provided input field to get the user information from the API. Please allow a few seconds since the API is hosted in Heroku.\");\n  }\n\n  // A way to change button and input field depends if user log in or not.\n  login() {\n    if(this.props.state.user === false) {\n      return (\n        <div className=\"flex-dir-c\">\n        <div className=\"wrap-message\">\n          <input type=\"text\" placeholder=\"Type here '1' or '2' to get data.\" ref=\"id\" />\n          <input className=\"signIn\" type=\"button\" value=\"Sign In\" onClick={this.userInformation} />\n        </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"flex-dir-c\">\n          <br/><br/>\n          <span>Welcome to Credit Report, {this.props.state.first_name} {this.props.state.last_name}.</span>\n          <input className=\"signOff\" type=\"button\" value=\"Sign Off\" onClick={this.props.signOff} />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">{this.login()}</div>\n    );\n  }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport CreditScore from './Credit_Score';\nimport CreditFactors from './Credit_Factors';\nimport Welcome from './Welcome';\n\n// console.log(\"Dashboard is working.\");\n\nclass Dashboard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      component: null,\n    }\n    this.renderComponent = this.renderComponent.bind(this);\n  }\n\n  renderComponent(component) {\n  // This is used to activate one of the six credit factors, when user click \"View Details\".\n    this.setState({\n      component: component\n    });\n  }\n\n  // This part of the home page. Here I'm calling the components CreditScore, CreditFactors,\n  // and passing data to them.\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"center\">\n              <Welcome \n                  state={this.props.state} \n                  getUserData={this.props.getUserData}\n                  signOff={this.props.signOff} />\n        </div>\n        <div className=\"flex\">\n          <div className=\"credit-score flex-1\">\n               <CreditScore \n                  state={this.props.state} />\n          </div>\n          <div className=\"credit-factors flex-4\">\n               <CreditFactors \n                  renderComponent={this.renderComponent} \n                  state={this.props.state} />\n          </div>\n        </div> \n        <div className=\"flex\">{this.state.component}</div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\n\n// console.log(\"Help Center is working.\");\n\nclass HelpCenter extends Component {\n\n  // I did not write the paragraphs. I got the information from experian.com.\n  // See line 38.\n\n  render() {\n    return (\n      <div className=\"help-center flex\">\n      <div className=\"basic flex-3\">\n        <div className=\"center\">\n\n        <img alt=\"Help Center\" src=\"images/helpcenter.png\"/>\n\n        </div>\n\n\t      <h2 className=\"bone\">Credit Report Basics</h2>\n\t  \t\t<p className=\"indent\">A credit report provides information on how you have \n\t  \t\tused credit in the past, including how much debt you have, and whether \n\t  \t\tor not you’ve paid your bills on time.</p>\n\t  \t\t<p className=\"indent\">There are three credit bureaus in the United States: \n\t  \t\tExperian, Equifax, and Transunion. Each of these credit reporting \n\t  \t\tagencies compiles your credit information from various reporting sources, \n\t  \t\tsuch as lenders, into a credit report.</p>\n\t  \t\t<p className=\"indent\">When you apply for credit cards, student loans, auto loans, \n\t  \t\tlenders check your credit report to make decisions about whether \n\t  \t\tor not to grant you credit, and about the rates and terms you qualify for.</p>\n\n\t      <h2 className=\"bone\">What Does a Credit Report Include?</h2>\n\t        <li className=\"indent\">Personal information: Your name, birth date, phone numbers.</li>\n\t\t    <li className=\"indent\">Credit accounts: Including credit cards, auto loans, mortgages.</li>\n\t\t    <li className=\"indent\">Public records: Court judgments, bankruptcies and tax liens.</li>\n\t\t    <li className=\"indent\">Recent inquiries: Who has recently asked to view your credit report and when.</li>  \n\t\n\t    <span>Source: <a href=\"http://www.experian.com/blogs/ask-experian/credit-education/report-basics/\">Experian.com</a></span>\n      </div>\n\n      <div className=\"basic faq flex-2\">\n      <h2 className=\"bone\">FAQ</h2>\n      <br/>\n        <details>\n\t\t<summary className=\"question bone\">How can I improve my credit score?</summary>\n\t\t<p className=\"indent\">✓ Pay your bills on time. Delinquent payments and collections can have a major negative impact on a credit score.</p>\n\t\t<p className=\"indent\">✓ Keep balances low on credit cards and other “revolving credit.” High outstanding debt can affect a credit score.</p>\n\t\t<p className=\"indent\">✓ Pay off debt rather than moving it around. Also, don’t close unused cards as a short-term strategy to improve your \n\t\tcredit score. Owing the same amount but having fewer open accounts may lower your credit score.</p>\n\t\t</details>\n\n      \t<details>\n\t\t<summary className=\"question bone\">What is a soft inquiry?</summary>\n\t\t<p className=\"indent\">When you check your own credit report or give permission to someone like a \n\t\tpotential employer to review your credit report, a soft inquiry occurs. \n\t\tBecause soft inquiries aren’t linked to a specific application for new credit, \n\t\tthey’re only visible on your credit report to you.</p>\n\t\t</details>\n\n\t\t<details>\n\t\t<summary className=\"question bone\">What is a hard inquiry?</summary>\n\t\t<p className=\"indent\">A hard inquiry occurs when a lender with whom you’ve applied for \n\t\tcredit (such as mortgage, auto loan or credit card) reviews your credit report as part of their \n\t\tdecision-making process. This type of inquiry appears on your \n\t\tcredit report and can influence your credit scores.</p>\n\t\t</details>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default HelpCenter;","import React, { Component } from 'react';\n\n// console.log(\"My Account is working.\");\n\nclass MyAccount extends Component {\n  constructor(props) {\n  \tsuper(props);\n  \t// console.log(props.profile);\n  \tthis.profile = this.profile.bind(this);\n  }\n\n  profile() {\n    // If no user, no profile data.\n  \tif(this.props.state.user === false) {\n      return (<div className=\"profile flex\"></div>)\n  \t}\n    // Otherwise, render all her information.\n  \telse {\n  \t  return (\n        <div className=\"profile flex\">\n          <ul className=\"profile-wrap flex-1\">\n          <h2>Name</h2>\n            <li className=\"profile-info\">First Name: {this.props.state.first_name}</li>\n            <li className=\"profile-info\">Middle Name: {this.props.state.middle_name}</li>\n            <li className=\"profile-info\">Last Name: {this.props.state.last_name}</li>\n          <h2>About You</h2>\n            <li className=\"profile-info\">Date of Birth: {this.props.state.date_of_birth}</li>\n            <li className=\"profile-info\">Place of Birth: {this.props.state.place_of_birth}</li>\n            <li className=\"profile-info\">Marital Status: {this.props.state.marital_status}</li>\n            <li className=\"profile-info\">Annual Household Income: {this.props.state.annual_household_income}</li>\n          </ul>\n          <ul className=\"profile-wrap flex-1\">\n          <h2>Home Address</h2>\n            <li className=\"profile-info\">Street Address: {this.props.state.street_address}</li>\n            <li className=\"profile-info\">Apartment: {this.props.state.apartment}</li>\n            <li className=\"profile-info\">City: {this.props.state.city}</li>\n            <li className=\"profile-info\">State: {this.props.state.state}</li>\n            <li className=\"profile-info\">Zip Code: {this.props.state.zip_code}</li>\n          <h2>Contact</h2>\n            <li className=\"profile-info\">Telephone: {this.props.state.telephone_number}</li>\n            <li className=\"profile-info\">Email: {this.props.state.email}</li>\n         </ul>\n        </div>\n  \t  );\n  \t}\n  }\n\n  // Calling the profile method.\n  render() {\n    return (\n      <div className=\"flex\">{this.profile()}</div>\n    );\n  }\n}\n\nexport default MyAccount;","import React, { Component } from 'react';\n\n// Render a 404 page when a router is not defined.\n\nclass FourOFour extends Component {\n  render() {\n    return (\n      <div id=\"fof\" className=\"flex\">\n      \t<div className=\"flex-1 centralize\">\n          <h2 className=\"font90 center\"><span className=\"grey\">404</span> Error</h2>\n          <h3 className=\"font70 center\">Page Not Found</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FourOFour;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\nimport Dashboard from './components/Dashboard';\nimport HelpCenter from './components/Help_Center';\nimport MyAccount from './components/My_Account';\nimport FourOFour from './components/Four_o_Four';\nimport ReactGA from 'react-ga';\nimport {\n        BrowserRouter as Router,\n        Route,\n        Switch\n        } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\n\nconsole.log(\"App.js is working.\");\n\n// The parent component, App.js, will set the state of all data received from the axios call.\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: false,\n      id: null,\n      first_name: null,\n      middle_name: null,\n      last_name: null,\n      date_of_birth: null,\n      place_of_birth: null,\n      gender: null,\n      marital_status: null,\n      annual_household_income: null,\n      street_address: null,\n      apartment: null,\n      city: null,\n      state: null,\n      zip_code: null,\n      telephone_number: null,\n      email: null,\n      public_record: null,\n      user_credit_score: null,\n      state_average_score: null,\n      account_type: [],\n      opened: [],\n      creditor: [],\n      credit_limit: [],\n      credit_use: [],\n      current_status: [],\n      collection: [],\n      collection_agency: [],\n      amount_paid_to_collection: [],\n      payment_history: [],\n      inq_creditor: [],\n      inq_account_type: [],\n      posted: []\n    }\n    this.getUserData = this.getUserData.bind(this);\n    this.getHardInquiries = this.getHardInquiries.bind(this);\n    this.signOff = this.signOff.bind(this);\n  }\n\t\n  initializeReactGA() {\n    ReactGA.initialize('UA-132345211-1');\n    ReactGA.pageview('/credit-report');\n  }\n\n  getUserData(id){\n  // Making an axios call to my api.\n  // The first part of the url was added because of a cross-origin browser issue.\n  // The instructor Joe helped me to figured out this problem.\n    axios.get(`https://cors-anywhere.herokuapp.com/https://creditreportapi.herokuapp.com/personalfinancial/${id}`)\n    .then((res) => {\n\n      // Creating temporary variables to be using later for set state.\n      var account_type = [];\n      var opened = [];\n      var creditor = [];\n      var credit_limit = [];\n      var credit_use = [];\n      var current_status = [];\n      var collection = [];\n      var collection_agency = [];\n      var amount_paid_to_collection = [];\n      var payment_history = [];\n\n      // Looping through the data received from the api.\n      for (var i = 0; i < res.data.data.length; i += 1) {\n\n        // Inserting payments that are related to the same account, into a single array.\n        var payments = \n        [res.data.data[i].jan, res.data.data[i].feb, res.data.data[i].mar, \n        res.data.data[i].apr, res.data.data[i].may, res.data.data[i].jun, \n        res.data.data[i].jul, res.data.data[i].aug, res.data.data[i].sep, \n        res.data.data[i].oct, res.data.data[i].nov, res.data.data[i].dec];\n\n        account_type.push(res.data.data[i].account_type)\n        opened.push(res.data.data[i].opened)\n        creditor.push(res.data.data[i].creditor)\n        credit_limit.push(res.data.data[i].credit_limit)\n        credit_use.push(res.data.data[i].credit_use)\n        current_status.push(res.data.data[i].current_status)\n        collection.push(res.data.data[i].collection)\n        collection_agency.push(res.data.data[i].collection_agency)\n        amount_paid_to_collection.push(res.data.data[i].amount_paid_to_collection)\n        payment_history.push(payments)\n\n      }\n      this.setState({\n        user: true,\n        id: id,\n        first_name: res.data.data[0].first_name,\n        middle_name: res.data.data[0].middle_name,\n        last_name: res.data.data[0].last_name,\n        date_of_birth: res.data.data[0].date_of_birth,\n        place_of_birth: res.data.data[0].place_of_birth,\n        gender: res.data.data[0].gender,\n        marital_status: res.data.data[0].marital_status,\n        annual_household_income: res.data.data[0].annual_household_income,\n        street_address: res.data.data[0].street_address,\n        apartment: res.data.data[0].apartment,\n        city: res.data.data[0].city,\n        state: res.data.data[0].state,\n        zip_code: res.data.data[0].zip_code,\n        telephone_number: res.data.data[0].telephone_number,\n        email: res.data.data[0].email,\n        public_record: res.data.data[0].public_record,\n        user_credit_score: res.data.data[0].user_credit_score,\n        state_average_score: res.data.data[0].state_average_score,\n        account_type: account_type,\n        opened: opened,\n        creditor: creditor,\n        credit_limit: credit_limit,\n        credit_use: credit_use,\n        current_status: current_status,\n        collection: collection,\n        collection_agency: collection_agency,\n        amount_paid_to_collection: amount_paid_to_collection,\n        payment_history: payment_history\n      })\n      this.getHardInquiries();\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n   }\n\n   // Getting the hard inquiries information.\n   getHardInquiries() {\n   \t// Making an axios call to hard inquiries.\n    axios.get(`https://cors-anywhere.herokuapp.com/https://creditreportapi.herokuapp.com/hardinquiries/${this.state.id}`)\n    .then((res) => {\n       var inq_creditor = [];\n       var inq_account_type = [];\n       var posted = []; \n\n        // Looping through the data received from the api.\n        for (var n = 0; n < res.data.data.length; n += 1) {\n          inq_creditor.push(res.data.data[n].inq_creditor)\n          inq_account_type.push(res.data.data[n].account_type)\n          posted.push(res.data.data[n].posted) \n        }\n\n      this.setState({\n        inq_creditor: inq_creditor,\n        inq_account_type: inq_account_type,\n        posted: posted\n      })\n    })\n  }\n\n  signOff(){\n    // When user click Sign Off, the state turn to false. I will be using this state\n    // to show/hide information.\n    this.setState({\n      user: false\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"wrapper\">\n        <Route startsWith path=\"/credit-report/\" component={() =>\n                  (<Navigation />) }/>\n        <Switch>\n              <Route path=\"/credit-report/\" exact component={() => \n                  (<Dashboard state={this.state}\n                              getUserData={this.getUserData}\n                              signOff={this.signOff} />) }/>\n              <Route path=\"/credit-report/help-center\" exact component={() => \n                  (<HelpCenter />) }/>\n              <Route path=\"/credit-report/my-account\" exact component={() => \n                  (<MyAccount signOff={this.signOff}\n                              state={this.state} />) }/>\n              <Route path=\"/credit-report/*\" component={() => (<FourOFour />) }/>\n        </Switch>\n        <Route startsWith path=\"/credit-report/\" component={() => (<Footer />) }/>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}